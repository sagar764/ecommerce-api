basePath: /api/v1
definitions:
  entities.Category:
    properties:
      child_categories:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      products:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  entities.CategoryDetails:
    properties:
      child_categories:
        items:
          $ref: '#/definitions/entities.Category'
        type: array
      created_at:
        $ref: '#/definitions/entities.CustomTime'
      created_by:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/entities.Product'
        type: array
      updated_at:
        $ref: '#/definitions/entities.CustomTime'
      updated_by:
        type: string
    type: object
  entities.CustomTime:
    properties:
      time.Time:
        type: string
    type: object
  entities.Order:
    properties:
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/entities.OrderItem'
        type: array
      status:
        type: string
      total:
        type: number
    type: object
  entities.OrderItem:
    properties:
      price:
        type: number
      product_name:
        type: string
      quantity:
        type: integer
      variant_id:
        type: string
      variant_name:
        type: string
    type: object
  entities.Product:
    properties:
      child_variants:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  entities.ProductDetails:
    properties:
      categories:
        items:
          $ref: '#/definitions/entities.Category'
        type: array
      created_at:
        $ref: '#/definitions/entities.CustomTime'
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      image_url:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        $ref: '#/definitions/entities.CustomTime'
      updated_by:
        type: string
      variants:
        items:
          $ref: '#/definitions/entities.Variant'
        type: array
    type: object
  entities.Variant:
    properties:
      color:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      discount_price:
        type: number
      id:
        type: string
      is_active:
        type: boolean
      mrp:
        type: number
      name:
        type: string
      quantity:
        type: integer
      size:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  errortools.Error:
    properties:
      code:
        type: string
      details:
        type: string
      helplink:
        type: string
      msg:
        type: string
      validations:
        $ref: '#/definitions/errortools.validationFails'
    type: object
  errortools.errRecord:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  errortools.validationFails:
    additionalProperties:
      items:
        $ref: '#/definitions/errortools.errRecord'
      type: array
    type: object
  utils.APIResponse:
    description: Standard API response structure used in the application
    properties:
      data:
        additionalProperties: {}
        type: object
      error:
        $ref: '#/definitions/errortools.Error'
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is an e-commerce API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: E-commerce API
  version: "1.0"
paths:
  /api/{version}/categories:
    get:
      consumes:
      - application/json
      parameters:
      - default: 10
        description: Number of categories to retrieve
        in: query
        name: limit
        type: integer
      - default: 0
        description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Search term to filter categories
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get all categories with optional pagination and search
      tags:
      - Categories
  /api/{version}/category:
    post:
      consumes:
      - application/json
      parameters:
      - description: Category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/entities.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Create a new category
      tags:
      - Categories
  /api/{version}/category/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Delete an existing category
      tags:
      - Categories
    get:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.CategoryDetails'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get details of a specific category
      tags:
      - Categories
    put:
      consumes:
      - application/json
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Category data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/entities.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Update an existing category
      tags:
      - Categories
  /api/{version}/orders:
    get:
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get all orders with pagination and search
      tags:
      - Orders
    post:
      consumes:
      - application/json
      parameters:
      - description: Order details
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/entities.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Create a new order
      tags:
      - Orders
  /api/{version}/orders/{id}:
    get:
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get an order by ID
      tags:
      - Orders
  /api/{version}/products:
    get:
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Retrieve all products with pagination and search
      tags:
      - Products
    post:
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/entities.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Create a new product
      tags:
      - Products
  /api/{version}/products/{id}:
    delete:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Delete a product by ID
      tags:
      - Products
    get:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.ProductDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Retrieve a product by ID
      tags:
      - Products
    put:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product to update
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/entities.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Update an existing product
      tags:
      - Products
  /api/{version}/variants:
    get:
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Page
        in: query
        name: page
        type: integer
      - description: Search query
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Get all variants with pagination and search
      tags:
      - Variants
    post:
      parameters:
      - description: Variant details
        in: body
        name: variant
        required: true
        schema:
          $ref: '#/definitions/entities.Variant'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Variant'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Create a new product variant
      tags:
      - Variants
  /api/{version}/variants/{id}:
    delete:
      parameters:
      - description: Variant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Delete a product variant by ID
      tags:
      - Variants
    get:
      parameters:
      - description: Variant ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Variant'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Retrieve a product variant by ID
      tags:
      - Variants
    put:
      parameters:
      - description: Variant ID
        in: path
        name: id
        required: true
        type: string
      - description: Variant details
        in: body
        name: variant
        required: true
        schema:
          $ref: '#/definitions/entities.Variant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/entities.Variant'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.APIResponse'
      summary: Update an existing product variant
      tags:
      - Variants
swagger: "2.0"
